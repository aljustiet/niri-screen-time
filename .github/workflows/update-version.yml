name: Update Version on Tag
on:
  push:
    tags:
      - 'v*'  # Триггер на теги вида v*

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Права на запись тегов и изменений

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Полная история коммитов

      - name: Get tag version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          # Проверка что версия не пустая
          if [ -z "${TAG_VERSION#v}" ]; then
            echo "Error: Tag version is empty"
            exit 1
          fi
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV
          echo "VERSION=${TAG_VERSION#v}" >> $GITHUB_ENV

      - name: Update version.go
        run: |
          cat << EOF > version.go
          // AUTOGENERATED FILE - DO NOT EDIT
          // Updated automatically during release
          
          package main
          
          const version = "$VERSION"
          EOF

      - name: Commit and update tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add version.go
          git commit -m "chore: update version to $VERSION [skip ci]"
          
          # Удаляем тег локально и на удалённом репозитории
          git tag -d $TAG_VERSION || true
          git push origin :refs/tags/$TAG_VERSION || true
          
          # Создаём и пушим новый тег
          git tag -a $TAG_VERSION -m "Release $TAG_VERSION"
          git push origin $TAG_VERSION
          
          # Если нужно обновить ветку (раскомментировать при необходимости)
          # git push origin HEAD:${GITHUB_REF_NAME}
